#include <bits/stdc++.h>
using namespace std;
 
const int MAX = 1e4 + 5;
char p[2*MAX];
char t[MAX];
long long dp[MAX][5][5][3][3];
int ar[2*MAX];
int z[2*MAX];
int counter;
const int mod = 1e9 + 7;
 
long long go(int idx, int two, int three, int five, int seven)
{
    if(idx == counter+1 && two >= 3 && three >= 2 && five >= 1 && seven >= 1) return 1;
    else if(idx == counter+1) return 0;
 
    if(dp[idx][two][three][five][seven] != -1) return dp[idx][two][three][five][seven];
    long long ret=0;
    int cc = ar[idx];
    int tw=0, thr=0, fiv=0, sev=0;
    while(cc%2 == 0 && tw <= 3) tw++, cc/=2;
    cc = ar[idx];
    while(cc%3 == 0 && thr <= 2) thr++, cc/=3;
    cc = ar[idx];
    while(cc%5 == 0 && fiv <= 1) fiv++, cc/=5;
    cc = ar[idx];
    while(cc%7 == 0 && sev <= 1) sev++, cc/=7;
    ret=go(idx+1,two,three,five,seven);
	ret+=go(idx+1,min(3,two+tw),min(2,three+thr),min(1,five+fiv),min(1,seven+sev));
 
	if(ret >= mod) ret -= mod;
	return dp[idx][two][three][five][seven]=ret;
}
 
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
 
    cin >> p;
    cin >> t;
    memset(dp, -1, sizeof(dp));
    int lenP=strlen(p);
	int cc=lenP;
	int lenT=strlen(t);
	p[lenP++]='#';
	for(int i=0;i<lenT;i++) p[lenP++]=t[i];
	p[lenP]='\0';
	z[0]=0;
	int l=0,r=0;
	for(int i=1;i<lenP;i++) {
		z[i]=0;
		if(i<=r) z[i]=min(z[i-l],r-i+1);
		while(i+z[i]<lenP and p[i+z[i]]==p[z[i]]) ++z[i];
		if(i+z[i]-1>r) l=i,r=i+z[i]-1;
	}
 
	counter = 0;
	for(int i=0;i<lenP;i++) if(z[i]==cc) ar[++counter]=i-cc;
	cout << go(1, 0, 0, 0, 0) << '\n';
	return 0;
}
