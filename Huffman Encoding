#include<bits/stdc++.h>
using namespace std;

struct minHeap
{
    char symbol;
    int f;
    struct  minHeap *left;
    struct minHeap *right; 

    minHeap(char sy,int fr)
    {
        symbol=sy;
        f=fr;
        this->left=this->right=NULL;
    }
};
struct compare
{
    bool operator()(minHeap* left,minHeap* right)
    {
        return left->f > right->f;
    }
};
void print(minHeap* root,string str)
{
    if(root==NULL)
        return;
    if(root->symbol!='#')
    {
        cout<<str<<' ';
    }
    print(root->left,str+"0");
    print(root->right,str+"1");
}
int main()
 {
    //code
    int t;
    cin >> t;
    while(t--)
    {
        string s;
        cin >> s;
        int n=s.length();

        int freq[n];
        for(int i=0;i<n;i++)
            cin >> freq[i];

        priority_queue<minHeap*,vector<minHeap*>,compare>pq;

        for(int i=0;i<n;i++)
        {
            pq.push(new minHeap(s[i],freq[i]));
        }


        while(pq.size() > 1)
        {
            minHeap* ll=pq.top();
            pq.pop();
            minHeap* rr=pq.top();
            pq.pop();

            minHeap *curr= new minHeap('#',ll->f + rr->f);
            curr->left=ll;
            curr->right=rr;
            pq.push(curr);
        }

        minHeap* root= pq.top();


        print(root,"");
        cout<<'\n';

    }
    return 0;
}
