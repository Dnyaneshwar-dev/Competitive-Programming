#include<bits/stdc++.h>
using namespace std;
#define int long long
int a[1001][1001];
int vis[1001][1001];
int n,m,k;
int cn[1001][1001];
int X[]={0,0,1,-1};
int Y[]={1,-1,0,0};
void dfs(int i,int j,vector<int>& t,int no)
{
    vis[i][j] = 1;
    t.push_back(1);
    cn[i][j] = no;
    for(int k=0;k<4;k++)
    {
        int x = i + X[k];
        int y = j + Y[k];
        if(x<1||y<1||x>n||y>m)
        continue;
        if(a[x][y] == 0)
        continue;
        if(!vis[x][y])
        dfs(x,y,t,no);
    }

}
signed main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    scanf("%lld%lld%lld",&n,&m,&k);
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=m;j++)
        {
            scanf("%lld",&a[i][j]);
        }
    }
    for(int i=1;i<=1000;i++)
        for(int j=1;j<=1000;j++)
            vis[i][j]=0;
    int comp_no = 1;
    vector<int>t;
    int tot=0;
    int cs[1001];
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=m;j++)
        {
            if(a[i][j] == 1 && !vis[i][j])
            {
                dfs(i,j,t,comp_no);
                tot+=t.size();
                cs[comp_no] = t.size();
                comp_no++;
                t.clear();
            }
        }
    }

    int marked[1001];
    memset(marked,0,sizeof marked);

    for(int i=0;i<k;i++)
    {
        int x,y;
        scanf("%lld%lld",&x,&y);

        if(a[x][y] == 0)
        {
            cout << tot << '\n';
            continue;
        }

        int component = cn[x][y];
        if(marked[component] == 1)
        {
            cout << tot << '\n';
        }
        else
        {
            tot -= cs[component];
            marked[component] = 1;
            cout << tot << '\n';
        }
    }




}
